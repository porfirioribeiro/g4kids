// Generated by CoffeeScript 1.3.3

g4.module("g4.Game");

g4.requires("g4.Scene", "g4.Item", "g4.Input");

g4.defines(function() {
  console.log($arg("module: g4.Game using %c", g4.Scene));
  return g4.Game = (function() {

    g4$Game.className = 'g4.Game';

    g4$Game.prototype.paused = false;

    g4$Game.prototype.canvas = null;

    g4$Game.prototype.backBufferCanvas = null;

    g4$Game.prototype.canvasWidth = 0;

    g4$Game.prototype.canvasHeight = 0;

    g4$Game.prototype.startTime = 0;

    g4$Game.prototype.fps = 0;

    g4$Game.prototype.scene = null;

    function g4$Game(canvas) {
      var e;
      this.canvas = canvas;
      this._update = this._update.bind(this);

      if ((e = g4.Type.check("g4.Game#", arguments, g4.Canvas))) {
        throw e;
      }
      this.canvasWidth = canvas.element.width;
      this.canvasHeight = canvas.element.height;
      this.backBufferCanvas = new g4.Canvas(this.canvasWidth, this.canvasHeight);
      this.startTime = window.animationStartTime;
      this.scene = new g4.Scene(this);
      g4.Input.register(this.canvas.element);
      window.requestAnimationFrame(this._update);
    }

    g4$Game.prototype._update = function(time) {
      var delta;
      delta = time - this.startTime;
      this.fps = 1000 / delta;
      if (!this.paused) {
        window.requestAnimationFrame(this._update);
      }
      this.update(delta);
      this.startTime = time;
      this.backBufferCanvas.ctx.clearRect(0, 0, this.canvas.element.width, this.canvas.element.height);
      this.draw(this.backBufferCanvas.ctx);
      this.canvas.ctx.clearRect(0, 0, this.canvas.element.width, this.canvas.element.height);
      this.canvas.ctx.drawImage(this.backBufferCanvas.ctx.canvas, 0, 0);
      g4.Input.update(delta);
    };

    g4$Game.prototype.update = function(delta) {
      this.scene.update(delta);
    };

    g4$Game.prototype.draw = function(ctx) {
      this.scene.draw(ctx);
    };

    return g4$Game;

  })();
});
