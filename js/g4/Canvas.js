// Generated by CoffeeScript 1.3.3

g4.module("g4.Canvas");

g4.defines(function() {
  if (!window.requestAnimationFrame) {
    window.requestAnimationFrame = window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function(callback) {
      return window.setTimeout(function() {
        return callback(Date.now(), 1000 / 60);
      });
    };
  }
  Object.defineProperty(window, "animationStartTime", {
    get: function() {
      return this.mozAnimationStartTime || Date.now();
    }
  });
  CanvasRenderingContext2D.prototype.drawRect = function(x, y, width, height) {
    this.fillRect(x, y, width, height);
    this.strokeRect(x, y, width, height);
  };
  return g4.Canvas = (function() {

    g4$Canvas.className = 'g4.Canvas';

    g4$Canvas.prototype.element = null;

    g4$Canvas.prototype.ctx = null;

    function g4$Canvas(width, height) {
      if (arguments.length === 2) {
        this.element = document.createElement("canvas");
        this.element.setAttribute("width", width + "px");
        this.element.setAttribute("height", height + "px");
        this.ctx = this.element.getContext("2d");
      }
    }

    g4$Canvas.prototype.toString = function() {
      return $arg("g4.Canvas(%, %)", this.element.width, this.element.height);
    };

    g4$Canvas.fromId = function(id) {
      var canvas;
      canvas = new g4.Canvas();
      canvas.element = document.getElementById(id);
      canvas.ctx = canvas.element.getContext("2d");
      return canvas;
    };

    return g4$Canvas;

  })();
});
